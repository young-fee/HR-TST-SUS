<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hr.dao.Sys_roleMapper">
	<resultMap id="BaseResultMap" type="hr.model.Sys_role">
		<id column="role_id" property="roleId" jdbcType="VARCHAR" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		role_id, role_name
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from sys_role
		where role_id = #{roleId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from sys_role
		where role_id = #{roleId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="hr.model.Sys_role">
		insert into sys_role (role_id, role_name)
		values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="hr.model.Sys_role">
		insert into sys_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				role_id,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=VARCHAR},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="hr.model.Sys_role">
		update sys_role
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
		</set>
		where role_id = #{roleId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="hr.model.Sys_role">
		update sys_role
		set role_name = #{roleName,jdbcType=VARCHAR}
		where role_id = #{roleId,jdbcType=VARCHAR}
	</update>

	<select id="showAllRole" resultMap="BaseResultMap">
		select * from sys_role where role_id like '%${keyword}%' or role_name like
		'%${keyword}%';
	</select>

	<select id="findUserRole" resultMap="BaseResultMap">
		SELECT
		`sys_role`.`role_id`
		, `sys_role`.`role_name`
		FROM
		`hr`.`sys_user_role`
		JOIN `hr`.`sys_role`
		ON (`sys_user_role`.`role_id` = `sys_role`.`role_id`)
		JOIN `hr`.`sys_user`
		ON (`sys_user_role`.`user_login_id` = `sys_user`.`user_login_id`)

		WHERE `sys_user`.`user_login_id` = #{userLoginId,jdbcType=VARCHAR};
	</select>
	
	
	<select id = "getAllRoleWithoutUser" resultMap="BaseResultMap" >
		SELECT * FROM sys_role WHERE role_id NOT IN (SELECT role_id FROM sys_user_role WHERE user_login_id = #{userLoginId,jdbcType=VARCHAR})
	</select>
	<select id="getRoles" resultMap="BaseResultMap">
		SELECT
		`sys_user_role`.`role_id`
		FROM
		`hr`.`sys_user_role`
		INNER JOIN `hr`.`sys_user`
		ON (`sys_user_role`.`user_login_id` = `sys_user`.`user_login_id`)
		WHERE `sys_user`.`user_name` = #{userName,jdbcType=VARCHAR}
	</select>
</mapper>